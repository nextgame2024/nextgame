<?php

namespace ContainerVlLAAWI;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDashboardControllerchangeRegistrationStatusService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.mh7n0Aq.App\Controller\DashboardController::changeRegistrationStatus()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.mh7n0Aq.App\\Controller\\DashboardController::changeRegistrationStatus()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
            'entityManager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'tournamentRegistrationRepository' => ['privates', 'App\\Repository\\TournamentRegistrationRepository', 'getTournamentRegistrationRepositoryService', true],
        ], [
            'userRepository' => 'App\\Repository\\UserRepository',
            'entityManager' => '?',
            'tournamentRegistrationRepository' => 'App\\Repository\\TournamentRegistrationRepository',
        ]))->withContext('App\\Controller\\DashboardController::changeRegistrationStatus()', $container);
    }
}
